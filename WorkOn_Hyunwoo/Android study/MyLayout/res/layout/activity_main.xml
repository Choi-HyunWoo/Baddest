<!-- 윈도우 우측의 Outline에서 Layout의 종류를 설정할 수 있다. -->
<!-- 기본은 RelativeLayout 이지만 이번엔 LinearLayout으로 진행할 것. -->
<!-- LinearLayout은 선을 기준으로 객체 하나하나가 다른 줄에 배치됨 (방향성 O : orientation) -->

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    >
	<!-- layout 역시 id를 가지고 있음. -->
	<!-- layout_width와 layout_height 은 모든 뷰에서 이 속성이 공통이다. (화면크기) -->
	<!-- layout에서 없어서는 안될 주요 속성은 
		layout의 크기를 결정하는 layout_width/layout_height 와
		layout의 뷰를 놓는 방향성을 결정하는 orientation 정도가 있다.
	 -->
	<!-- properties에서 orientation 속성을 바꾼다면 세로 방향에서 가로 방향으로 view가 배치된다. -->

    <TextView
        android:id="@+id/TextView1"
        android:layout_width="250dp"
        android:layout_height="wrap_content"
		android:textSize="30dp"
        android:background="#ffff0000"
        android:text="Hi~1"
      	android:layout_marginTop="30dp"
      	android:padding="30dp"
      	android:gravity="center_horizontal"
      	android:layout_gravity="center_horizontal"
      	android:layout_weight="1" />
    <!-- 
    <TextView : 텍스트 뷰를 나타냄 
    	id : 화면에 나타나 있는 것을 source에서 찾고자 할때 id로 찾음 
    	properties 는 위젯의 속성 
    	Background 에서 텍스트 크기에 딱 맞는 배경색을 지정할 수 있음 (RGB) 
    	Layout 자체에서도 properties에서 배경색을 지정할 수 있다. 
    	 
    	properties 이외에도 xml 파일에서 속성을 조정 가능.
    	android.textSize=""	: 텍스트의 사이즈를 변경
    	단위는 dp. dp 단위는 화면크기에 비례하여 그정도 크기로 보여줌.
    	  
    	android:layout_margin="" : 뷰 간의 바깥쪽 영역에 간격을 두는 역할을 함. (단위 dp)
    	android:layout_marginTop : 위쪽으로만 간격을 두는 역할을 함.
    	* margin의 여백은 상대적이므로 두번째 객체를 띄울때 첫번째 객체의 여백까지 띄워줄 필요는 없다.
    	 
    	android:background="#______" : 뷰의 배경색을 설정 (앞의 두자리는 투명도, 뒤의 여섯자리는 RGB)
		
		android:padding=""	: 텍스트뷰의 글자와 영역사이의 여백을 만들어줌. 영역 확장 (단위 dp)
		layout의 width와 height가 wrap_content 로 이루어져 있는데,
		여기서 wrap_content는 주어진 텍스트에 딱 맞게 뷰의 영역을 두겠다는 의미임.
		이때, padding을 설정했으므로 뷰의 영역은 wrap_content + padding(x dp) 만큼을 차지하게됨.
		
		android:gravity=""	: 뷰의 공간과 뷰의 내용물을 정렬 가능 (중심을 어디에 둘건지)
			( center_horizontal	뷰의 공간과 뷰의 내용물을 좌우 정렬 )
		android:layout_gravity=""	: 뷰 자체를 레이아웃에서 정렬
		android:layout_weight=""	: LinearLayout이 가진 전체 공간을 비율로 할당하여 나눠준다.
    -->

    <TextView
        android:id="@+id/textView2"
        android:layout_width="250dp"
        android:layout_height="wrap_content"
		android:textSize="30dp"
        android:background="#ff008000"
        android:text="Hi~2"
      	android:layout_marginTop="30dp"
      	android:padding="30dp"
      	android:gravity="center_horizontal"
      	android:layout_gravity="center_horizontal"
      	android:layout_weight="1" />

    <TextView
        android:id="@+id/textView3"
        android:layout_width="250dp"
        android:layout_height="wrap_content"
		android:textSize="30dp"
        android:background="#ff0000ff"
        android:text="Hi~3"
      	android:layout_marginTop="30dp"
      	android:padding="30dp"
      	android:gravity="center_horizontal"
      	android:layout_gravity="center_horizontal"
      	android:layout_weight="1" />
    
	

</LinearLayout>
